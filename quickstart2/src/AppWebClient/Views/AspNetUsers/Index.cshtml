@model IEnumerable<AppWebClient.Models.AspNetUser>

@{
    ViewData["Title"] = "Index";
}

<h1>Liste des utilisateurs</h1>
<hr />

@*<p>
        <a asp-action="Create">Create New</a>
    </p>*@
<table id="table" class="compact hover stripe">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.NormalizedUsername)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            @*<th>
                        @Html.DisplayNameFor(model => model.RoleId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserId)
                    </th>
                    <th>
                        Role
                    </th>
                    <th>
                    @Html.DisplayNameFor(model => model.NormalizedEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.EmailConfirmed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PasswordHash)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SecurityStamp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ConcurrencyStamp)
                </th>*@
            <th>
                Numéro de téléphone
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TwoFactorEnabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LockoutEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LockoutEnabled)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccessFailedCount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IdCustomerNavigation)
                </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.NormalizedUsername)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.RoleId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NormalizedEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailConfirmed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PasswordHash)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SecurityStamp)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ConcurrencyStamp)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEnd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LockoutEnabled)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccessFailedCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdCustomerNavigation.Id)
                    </td>*@
                <td>
                    @*<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |*@
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @*<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
@Html.ActionLink("Retour à l'accueil", "Index", "Home")


@section Scripts{
    <script>
        $(document).ready(function () {
            $('#table').DataTable({
                dom: '<"wrapper"lipt>',
                language: {
                    "sEmptyTable": "Aucune donnée disponible dans le tableau",
                    "sInfo": "Affichage de l'élément _START_ à _END_ sur _TOTAL_ éléments",
                    "sInfoEmpty": "Affichage de l'élément 0 à 0 sur 0 élément",
                    "sInfoFiltered": "(filtré à partir de _MAX_ éléments au total)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ",",
                    "sLengthMenu": "Afficher _MENU_ éléments",
                    "sLoadingRecords": "Chargement...",
                    "sProcessing": "Traitement...",
                    "sSearch": "Rechercher :",
                    "sZeroRecords": "Aucun élément correspondant trouvé",
                    "oPaginate": {
                        "sFirst": "Premier",
                        "sLast": "Dernier",
                        "sNext": "Suivant",
                        "sPrevious": "Précédent"
                    },
                    "oAria": {
                        "sSortAscending": ": activer pour trier la colonne par ordre croissant",
                        "sSortDescending": ": activer pour trier la colonne par ordre décroissant"
                    },
                    "select": {
                        "rows": {
                            "_": "%d lignes sélectionnées",
                            "0": "Aucune ligne sélectionnée",
                            "1": "1 ligne sélectionnée"
                        }
                    }
                }
            });
        });
    </script>
}